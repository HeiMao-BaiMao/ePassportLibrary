
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "AuthorityKeyIdentifier", IsSet = false)]
    public class AuthorityKeyIdentifier : IASN1PreparedElement 
    {
        
        private KeyIdentifier keyIdentifier_;
        
        private bool  keyIdentifier_present = false;
        
		[ASN1Element(Name = "keyIdentifier", IsOptional = true, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public KeyIdentifier KeyIdentifier
        {
            get { return keyIdentifier_; }
            set { keyIdentifier_ = value; keyIdentifier_present = true;  }
        }
  
        private GeneralNames authorityCertIssuer_;
        
        private bool  authorityCertIssuer_present = false;
        
		[ASN1Element(Name = "authorityCertIssuer", IsOptional = true, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public GeneralNames AuthorityCertIssuer
        {
            get { return authorityCertIssuer_; }
            set { authorityCertIssuer_ = value; authorityCertIssuer_present = true;  }
        }
  
        private CertificateSerialNumber authorityCertSerialNumber_;
        
        private bool  authorityCertSerialNumber_present = false;
        
		[ASN1Element(Name = "authorityCertSerialNumber", IsOptional = true, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public CertificateSerialNumber AuthorityCertSerialNumber
        {
            get { return authorityCertSerialNumber_; }
            set { authorityCertSerialNumber_ = value; authorityCertSerialNumber_present = true;  }
        }
  
        public bool isKeyIdentifierPresent()
        {
            return this.keyIdentifier_present == true;
        }
        
        public bool isAuthorityCertIssuerPresent()
        {
            return this.authorityCertIssuer_present == true;
        }
        
        public bool isAuthorityCertSerialNumberPresent()
        {
            return this.authorityCertSerialNumber_present == true;
        }
        

        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(AuthorityKeyIdentifier));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
