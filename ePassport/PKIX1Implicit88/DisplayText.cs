
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Choice(Name = "DisplayText")]
    public class DisplayText : IASN1PreparedElement 
    {
        
        private string ia5String_;
        private bool  ia5String_selected = false;

        
		[ASN1String(Name = "", StringType = UniversalTags.IA5String, IsUCS = false)]
		[ASN1ValueRangeConstraint(Min = 1, Max = 200)]
		[ASN1Element(Name = "ia5String", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public string Ia5String
        {
            get { return ia5String_; }
            set { selectIa5String(value); }
        }
  
        private string visibleString_;
        private bool  visibleString_selected = false;

        
		[ASN1String(Name = "", StringType = UniversalTags.VisibleString, IsUCS = false)]
		[ASN1ValueRangeConstraint(Min = 1, Max = 200)]
		[ASN1Element(Name = "visibleString", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public string VisibleString
        {
            get { return visibleString_; }
            set { selectVisibleString(value); }
        }
  
        private string bmpString_;
        private bool  bmpString_selected = false;

        
		[ASN1String(Name = "", StringType = UniversalTags.BMPString, IsUCS = false)]
		[ASN1ValueRangeConstraint(Min = 1, Max = 200)]
		[ASN1Element(Name = "bmpString", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public string BmpString
        {
            get { return bmpString_; }
            set { selectBmpString(value); }
        }
  
        private string utf8String_;
        private bool  utf8String_selected = false;

        
		[ASN1String(Name = "", StringType = UniversalTags.UTF8String, IsUCS = false)]
		[ASN1ValueRangeConstraint(Min = 1, Max = 200)]
		[ASN1Element(Name = "utf8String", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public string Utf8String
        {
            get { return utf8String_; }
            set { selectUtf8String(value); }
        }
  
        public bool isIa5StringSelected()
        {
            return this.ia5String_selected;
        }

        

        public void selectIa5String (string val) 
        {
            this.ia5String_ = val;
            this.ia5String_selected = true;
            
            this.visibleString_selected = false;
            
            this.bmpString_selected = false;
            
            this.utf8String_selected = false;
            
        }
  
        public bool isVisibleStringSelected()
        {
            return this.visibleString_selected;
        }

        

        public void selectVisibleString (string val) 
        {
            this.visibleString_ = val;
            this.visibleString_selected = true;
            
            this.ia5String_selected = false;
            
            this.bmpString_selected = false;
            
            this.utf8String_selected = false;
            
        }
  
        public bool isBmpStringSelected()
        {
            return this.bmpString_selected;
        }

        

        public void selectBmpString (string val) 
        {
            this.bmpString_ = val;
            this.bmpString_selected = true;
            
            this.ia5String_selected = false;
            
            this.visibleString_selected = false;
            
            this.utf8String_selected = false;
            
        }
  
        public bool isUtf8StringSelected()
        {
            return this.utf8String_selected;
        }

        

        public void selectUtf8String (string val) 
        {
            this.utf8String_ = val;
            this.utf8String_selected = true;
            
            this.ia5String_selected = false;
            
            this.visibleString_selected = false;
            
            this.bmpString_selected = false;
            
        }
  

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DisplayText));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
