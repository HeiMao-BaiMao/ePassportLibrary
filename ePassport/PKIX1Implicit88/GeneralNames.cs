
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1BoxedType(Name = "GeneralNames")]
    public class GeneralNames : IASN1PreparedElement 
    {

        private System.Collections.Generic.ICollection<GeneralName> val = null; 
        
        
		[ASN1ValueRangeConstraint(Min = 1, Max = long.MaxValue)]
        [ASN1SequenceOf(Name = "GeneralNames", IsSetOf = false)]

        public System.Collections.Generic.ICollection<GeneralName> Value
        {
            get { return val; }
            set { val = value; }
        }
        
        public void initValue() 
        {
            this.Value = new System.Collections.Generic.List<GeneralName>();
        }
        
        public void Add(GeneralName item) 
        {
            this.Value.Add(item);
        }

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(GeneralNames));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
