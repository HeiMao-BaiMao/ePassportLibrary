
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Choice(Name = "Time")]
    public class Time : IASN1PreparedElement 
    {
        
        private string utcTime_;
        private bool  utcTime_selected = false;

        
		[ASN1String(Name = "", StringType = UniversalTags.UTCTime, IsUCS = false)]
		[ASN1Element(Name = "utcTime", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public string UtcTime
        {
            get { return utcTime_; }
            set { selectUtcTime(value); }
        }
  
        private string generalTime_;
        private bool  generalTime_selected = false;

        
		[ASN1String(Name = "", StringType = UniversalTags.GeneralizedTime, IsUCS = false)]
		[ASN1Element(Name = "generalTime", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public string GeneralTime
        {
            get { return generalTime_; }
            set { selectGeneralTime(value); }
        }
  
        public bool isUtcTimeSelected()
        {
            return this.utcTime_selected;
        }

        

        public void selectUtcTime (string val) 
        {
            this.utcTime_ = val;
            this.utcTime_selected = true;
            
            this.generalTime_selected = false;
            
        }
  
        public bool isGeneralTimeSelected()
        {
            return this.generalTime_selected;
        }

        

        public void selectGeneralTime (string val) 
        {
            this.generalTime_ = val;
            this.generalTime_selected = true;
            
            this.utcTime_selected = false;
            
        }
  

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Time));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
