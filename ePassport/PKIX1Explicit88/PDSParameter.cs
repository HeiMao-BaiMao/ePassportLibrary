
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "PDSParameter", IsSet = true)]
    public class PDSParameter : IASN1PreparedElement 
    {
        
        private PrintablePDSParameter printable_string_;
        
        private bool  printable_string_present = false;
        
		[ASN1Element(Name = "printable-string", IsOptional = true, HasTag = false, HasDefaultValue = false)]
        public PrintablePDSParameter Printable_string
        {
            get { return printable_string_; }
            set { printable_string_ = value; printable_string_present = true;  }
        }
  
        private string teletex_string_;
        
        private bool  teletex_string_present = false;
        
		[ASN1String(Name = "", StringType = UniversalTags.TeletexString, IsUCS = false)]
		[ASN1ValueRangeConstraint(Min = 1, Max = 30)]
		[ASN1Element(Name = "teletex-string", IsOptional = true, HasTag = false, HasDefaultValue = false)]
        public string Teletex_string
        {
            get { return teletex_string_; }
            set { teletex_string_ = value; teletex_string_present = true;  }
        }
  
        public bool isPrintable_stringPresent()
        {
            return this.printable_string_present == true;
        }
        
        public bool isTeletex_stringPresent()
        {
            return this.teletex_string_present == true;
        }
        

        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(PDSParameter));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
