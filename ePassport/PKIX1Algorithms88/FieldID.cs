
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "FieldID", IsSet = false)]
    public class FieldID : IASN1PreparedElement 
    {
        
        private ObjectIdentifier fieldType_;
        [ASN1ObjectIdentifier( Name = "" )]
    
		[ASN1Element(Name = "fieldType", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public ObjectIdentifier FieldType
        {
            get { return fieldType_; }
            set { fieldType_ = value;  }
        }
  
        private byte[] parameters_;
        [ASN1Any( Name = "" )]
    
		[ASN1Element(Name = "parameters", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public byte[] Parameters
        {
            get { return parameters_; }
            set { parameters_ = value;  }
        }
  

        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(FieldID));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
