
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "DigestedData", IsSet = false)]
    public class DigestedData : IASN1PreparedElement 
    {
        
        private CMSVersion version_;
        
		[ASN1Element(Name = "version", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public CMSVersion Version
        {
            get { return version_; }
            set { version_ = value;  }
        }
  
        private DigestAlgorithmIdentifier digestAlgorithm_;
        
		[ASN1Element(Name = "digestAlgorithm", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public DigestAlgorithmIdentifier DigestAlgorithm
        {
            get { return digestAlgorithm_; }
            set { digestAlgorithm_ = value;  }
        }
  
        private EncapsulatedContentInfo encapContentInfo_;
        
		[ASN1Element(Name = "encapContentInfo", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public EncapsulatedContentInfo EncapContentInfo
        {
            get { return encapContentInfo_; }
            set { encapContentInfo_ = value;  }
        }
  
        private Digest digest_;
        
		[ASN1Element(Name = "digest", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public Digest Digest
        {
            get { return digest_; }
            set { digest_ = value;  }
        }
  

        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DigestedData));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
