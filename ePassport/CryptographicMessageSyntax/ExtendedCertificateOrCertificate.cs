
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Choice(Name = "ExtendedCertificateOrCertificate")]
    public class ExtendedCertificateOrCertificate : IASN1PreparedElement 
    {
        
        private Certificate certificate_;
        private bool  certificate_selected = false;

        
		[ASN1Element(Name = "certificate", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public Certificate Certificate
        {
            get { return certificate_; }
            set { selectCertificate(value); }
        }
  
        private ExtendedCertificate extendedCertificate_;
        private bool  extendedCertificate_selected = false;

        
		[ASN1Element(Name = "extendedCertificate", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public ExtendedCertificate ExtendedCertificate
        {
            get { return extendedCertificate_; }
            set { selectExtendedCertificate(value); }
        }
  
        public bool isCertificateSelected()
        {
            return this.certificate_selected;
        }

        

        public void selectCertificate (Certificate val) 
        {
            this.certificate_ = val;
            this.certificate_selected = true;
            
            this.extendedCertificate_selected = false;
            
        }
  
        public bool isExtendedCertificateSelected()
        {
            return this.extendedCertificate_selected;
        }

        

        public void selectExtendedCertificate (ExtendedCertificate val) 
        {
            this.extendedCertificate_ = val;
            this.extendedCertificate_selected = true;
            
            this.certificate_selected = false;
            
        }
  

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ExtendedCertificateOrCertificate));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
