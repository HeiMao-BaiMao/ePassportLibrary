
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "EnvelopedData", IsSet = false)]
    public class EnvelopedData : IASN1PreparedElement 
    {
        
        private CMSVersion version_;
        
		[ASN1Element(Name = "version", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public CMSVersion Version
        {
            get { return version_; }
            set { version_ = value;  }
        }
  
        private OriginatorInfo originatorInfo_;
        
        private bool  originatorInfo_present = false;
        
		[ASN1Element(Name = "originatorInfo", IsOptional = true, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public OriginatorInfo OriginatorInfo
        {
            get { return originatorInfo_; }
            set { originatorInfo_ = value; originatorInfo_present = true;  }
        }
  
        private RecipientInfos recipientInfos_;
        
		[ASN1Element(Name = "recipientInfos", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public RecipientInfos RecipientInfos
        {
            get { return recipientInfos_; }
            set { recipientInfos_ = value;  }
        }
  
        private EncryptedContentInfo encryptedContentInfo_;
        
		[ASN1Element(Name = "encryptedContentInfo", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public EncryptedContentInfo EncryptedContentInfo
        {
            get { return encryptedContentInfo_; }
            set { encryptedContentInfo_ = value;  }
        }
  
        private UnprotectedAttributes unprotectedAttrs_;
        
        private bool  unprotectedAttrs_present = false;
        
		[ASN1Element(Name = "unprotectedAttrs", IsOptional = true, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public UnprotectedAttributes UnprotectedAttrs
        {
            get { return unprotectedAttrs_; }
            set { unprotectedAttrs_ = value; unprotectedAttrs_present = true;  }
        }
  
        public bool isOriginatorInfoPresent()
        {
            return this.originatorInfo_present == true;
        }
        
        public bool isUnprotectedAttrsPresent()
        {
            return this.unprotectedAttrs_present == true;
        }
        

        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EnvelopedData));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
