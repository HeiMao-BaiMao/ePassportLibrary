
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "RSASSA_PSS_params", IsSet = false)]
    public class RSASSA_PSS_params : IASN1PreparedElement 
    {
        
        private HashAlgorithm hashAlgorithm_;
        
        private bool  hashAlgorithm_present = false;
        
		[ASN1Element(Name = "hashAlgorithm", IsOptional = true, HasTag = true, Tag = 0, IsImplicitTag = false, HasDefaultValue = false)]
        public HashAlgorithm HashAlgorithm
        {
            get { return hashAlgorithm_; }
            set { hashAlgorithm_ = value; hashAlgorithm_present = true;  }
        }
  
        private MaskGenAlgorithm maskGenAlgorithm_;
        
        private bool  maskGenAlgorithm_present = false;
        
		[ASN1Element(Name = "maskGenAlgorithm", IsOptional = true, HasTag = true, Tag = 1, IsImplicitTag = false, HasDefaultValue = false)]
        public MaskGenAlgorithm MaskGenAlgorithm
        {
            get { return maskGenAlgorithm_; }
            set { maskGenAlgorithm_ = value; maskGenAlgorithm_present = true;  }
        }
  
        private BigInteger saltLength_;
        [ASN1Integer( Name = "" )]
    
		[ASN1Element(Name = "saltLength", IsOptional = false, HasTag = true, Tag = 2, IsImplicitTag = false, HasDefaultValue = true)]
        public BigInteger SaltLength
        {
            get { return saltLength_; }
            set { saltLength_ = value;  }
        }
  
        private BigInteger trailerField_;
        [ASN1Integer( Name = "" )]
    
		[ASN1Element(Name = "trailerField", IsOptional = false, HasTag = true, Tag = 3, IsImplicitTag = false, HasDefaultValue = true)]
        public BigInteger TrailerField
        {
            get { return trailerField_; }
            set { trailerField_ = value;  }
        }
  
        public bool isHashAlgorithmPresent()
        {
            return this.hashAlgorithm_present == true;
        }
        
        public bool isMaskGenAlgorithmPresent()
        {
            return this.maskGenAlgorithm_present == true;
        }
        

        public void initWithDefaults() 
        {
            BigInteger param_SaltLength =         
            new BigInteger ( 20);
        SaltLength = param_SaltLength;
    BigInteger param_TrailerField =         
            new BigInteger ( 1);
        TrailerField = param_TrailerField;
    
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(RSASSA_PSS_params));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
