
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1BoxedType(Name = "EFCOM")]
    public class EFCOM: IASN1PreparedElement 
    {

        private EFCOMSequenceType val;

        
    [ASN1PreparedElement]
    [ASN1Sequence(Name = "EFCOM", IsSet = false)]
    public class EFCOMSequenceType : IASN1PreparedElement
    {
        
        private string ldsVersionNumber_;
        
		[ASN1String(Name = "", StringType = UniversalTags.NumericString, IsUCS = false)]
            [ASN1SizeConstraint ( Max = 4L )]
        
		[ASN1Element(Name = "ldsVersionNumber", IsOptional = false, HasTag = true, Tag = 1, TagClass = TagClasses.Application, HasDefaultValue = false)]
        public string LdsVersionNumber
        {
            get { return ldsVersionNumber_; }
            set { ldsVersionNumber_ = value;  }
        }
  
        private string unicodeVersionNumber_;
        
		[ASN1String(Name = "", StringType = UniversalTags.NumericString, IsUCS = false)]
            [ASN1SizeConstraint ( Max = 6L )]
        
		[ASN1Element(Name = "unicodeVersionNumber", IsOptional = false, HasTag = true, Tag = 54, TagClass = TagClasses.Application, HasDefaultValue = false)]
        public string UnicodeVersionNumber
        {
            get { return unicodeVersionNumber_; }
            set { unicodeVersionNumber_ = value;  }
        }
  
        private byte[] datagroupList_;
        [ASN1OctetString( Name = "" )]
    
		[ASN1Element(Name = "datagroupList", IsOptional = false, HasTag = true, Tag = 28, TagClass = TagClasses.Application, HasDefaultValue = false)]
        public byte[] DatagroupList
        {
            get { return datagroupList_; }
            set { datagroupList_ = value;  }
        }
  
        
        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EFCOMSequenceType));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }
    }
                
		[ASN1Element(Name = "EFCOM", IsOptional = false, HasTag = true, Tag = 0, TagClass = TagClasses.Application, HasDefaultValue = false)]
        public EFCOMSequenceType Value
        {
            get { return val; }
            
            set { val = value; }
            
        }

        
        
        public EFCOM ()
        {
        }

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EFCOM));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
