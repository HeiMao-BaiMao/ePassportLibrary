
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace ePassport {


    [ASN1PreparedElement]
    [ASN1BoxedType(Name = "DG4")]
    public class DG4: IASN1PreparedElement 
    {

        private DG4SequenceType val;

        
    [ASN1PreparedElement]
    [ASN1Sequence(Name = "DG4", IsSet = false)]
    public class DG4SequenceType : IASN1PreparedElement
    {
        
        private BiometricInfoGroupTemplate biometricInfoGroupTemplate_;
        
		[ASN1Element(Name = "biometricInfoGroupTemplate", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public BiometricInfoGroupTemplate BiometricInfoGroupTemplate
        {
            get { return biometricInfoGroupTemplate_; }
            set { biometricInfoGroupTemplate_ = value;  }
        }
  
        
        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DG4SequenceType));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }
    }
                
		[ASN1Element(Name = "DG4", IsOptional = false, HasTag = true, Tag = 22, TagClass = TagClasses.Application, HasDefaultValue = false)]
        public DG4SequenceType Value
        {
            get { return val; }
            
            set { val = value; }
            
        }

        
        
        public DG4 ()
        {
        }

        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DG4));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
